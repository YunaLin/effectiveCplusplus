// 条款33:明智的使用内联
// 内联函数要比宏定义好的多
// 但是内联的过分使用和不恰当使用会导致代码膨胀而导致不合理的系统颠簸
// 构造函数和析构函数不适合内联
// 如果内联函数体非短，则有利于提高程序的效率
inline void f() {}
void (*pf)() = f;

int main() {
    // 对f的内联调用
    f();
    // 通过pf对f的非内联调用
    pf();
}

// 对于内联函数的修改，只需要重新编译，但是对于非内联函数的修改，仅需要用户进行重新链接，这样就减少了成本
// 没必要就不要内联，要在找出能够提高程序效率的重要函数的时候再使用内联，并且注意编译器的警告信息