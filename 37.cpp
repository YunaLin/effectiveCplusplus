// 条款37:决不要重新定义继承而来的非虚函数
class B {
    public:
    void f();
    ...
};
class D:public B {
    public:
    void f();
};
D x;
B* pB = &x;
D* pD = &x;

// 如果在D中重新定义了f().则下面两个调用的结果不同
pB->f();
pD->f();
// 非虚函数是静态绑定的，此时，pB是B的指针类型，所以调用的是B的非虚函数，而pD则调用的是D的指针类型
// 虚函数则是动态绑定的，如果f是虚函数，则指向的都是D::f();